CREATE TABLE "mytable" (
  "Authentication for trader" text
);

INSERT INTO "mytable" ("Authentication for trader")
VALUES
('FUNCTION AUTH'),
('(p_username IN VARCHAR2'),
('p_password IN VARCHAR2)'),
('RETURN BOOLEAN'),
('IS'),
('l_user_exist   NUMBER;'),
('l_useremail    VARCHAR2(255) := UPPER(p_username);'),
('l_hashed_password VARCHAR2(255);'),
('l_user_password VARCHAR2(255);'),
('l_user_type VARCHAR2(255);'),
('l_verification_status NUMBER;'),
('l_verified_admin NUMBER;'),
('BEGIN'),
('-- Check if email and password are provided'),
('IF p_username IS NULL OR p_username = '''' OR p_password IS NULL OR p_password = '''' THEN'),
('RAISE_APPLICATION_ERROR(-20005'),
('END IF;'),
('-- Hash the plain text password'),
('l_hashed_password := UTL_RAW.CAST_TO_RAW(DBMS_OBFUSCATION_TOOLKIT.MD5(input_string => p_password));'),
('-- Check if the user exists and retrieve necessary details'),
('BEGIN'),
('SELECT'),
('USER_PASSWORD'),
('USER_TYPE'),
('(SELECT VERIFICATION_STATUS FROM TRADER WHERE TRADER.USER_ID = CLECK_USER.USER_ID) AS VERIFICATION_STATUS'),
('(SELECT VERFIED_ADMIN FROM TRADER WHERE TRADER.USER_ID = CLECK_USER.USER_ID) AS VERIFIED_ADMIN'),
('INTO'),
('l_user_password'),
('l_user_type'),
('l_verification_status'),
('l_verified_admin'),
('FROM'),
('CLECK_USER'),
('WHERE'),
('UPPER(USER_EMAIL) = l_useremail;'),
('-- Check if the email exists'),
('IF l_user_password IS NULL THEN'),
('RAISE_APPLICATION_ERROR(-20001'),
('END IF;'),
('-- Check if the password matches'),
('IF UPPER(l_user_password) != UPPER(l_hashed_password) THEN'),
('RAISE_APPLICATION_ERROR(-20002'),
('END IF;'),
('-- Check if the user type matches Trader'),
('IF UPPER(l_user_type) != ''TRADER'' THEN'),
('RETURN FALSE;'),
('END IF;'),
('-- Check if the verification status matches'),
('IF l_verification_status != 1 THEN'),
('RAISE_APPLICATION_ERROR(-20003'),
('END IF;'),
('-- Check if the admin verification matches'),
('IF l_verified_admin != 1 THEN'),
('RAISE_APPLICATION_ERROR(-20004'),
('END IF;'),
('-- If all conditions are met'),
('RETURN TRUE;'),
('EXCEPTION'),
('WHEN NO_DATA_FOUND THEN'),
('RAISE_APPLICATION_ERROR(-20001'),
('END;'),
('EXCEPTION'),
('-- Handle specific exceptions if needed'),
('WHEN OTHERS THEN'),
('RETURN FALSE;'),
('END AUTH;');
